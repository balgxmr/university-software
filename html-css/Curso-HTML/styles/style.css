/*   Con em si tenemos por ejemplo, un <h1> y dentro <span>texto<span/>, lo que hace em es que
     es que agarra el valor del h1 y lo multiplica al span, si el h1 tiene un valor de 2 em, y al span le 
     ponemos un valor de 2em igualmente, serían 4em en total, por ello es mejor usar rem. 
     Además px no es tan recomendado... 
     
     Rem es relativo al documento, por lo }1tanto no tiene el comportamiento extraño de em, ya que toma como referencia el tamaño del documento en vez de h1 
  

     **** Also, usamos los valores de HTML y BODY abajo para que 1 rem = 10px!
*/

:root {
  --blanco: #ffffff;
  --oscuro: #212121;
  --primario: rgb(253, 230, 148);
  --secundario: rgb(31, 28, 21);
  --terciario: rgb(164, 144, 72);
  --background: rgb(255, 248, 225);
  --gris: #757575;
}

html {
  font-size: 62.5%;
}

body {
  font-size: 16px;
  font-family: "Inter", sans-serif;
  background-color: var(--background);
}

.titulo {
  text-align: center;
  font-size: 3.8rem;
}

.titulo span {
  text-align: center;
  font-size: 2rem;
}

.contenedor {
  max-width: 120rem;
  /*
  margin-top: 0px;
  margin-right: auto;
  margin-bottom: 0px;
  margin-left: auto;
  
  margin equivale a los 4 valores de arriba, en ese mismo orden.
  ej: margin: valor_top valor_right valor_bottom valor_left;
  
  cuando tenemos repetidos: 0 auto 0 auto, se puede dejar como uno: 0 auto
  */
  margin: 0 auto;
}

.nav-bg {
  background-color: var(--primario);
}

.navegacion-principal {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}

/*
 * Tamaños que si bien no son un estándar, son como la media (+o-): 
 * 480px : móviles
 * 768px : tablets
 * 1140px: desktop/laptop
 * 1440px: pantallás aún más grandes
 */

@media (min-width: 480px) {
  .navegacion-principal {
    flex-direction: row;
  }
}

.navegacion-principal a {
  color: var(--secundario);
  text-decoration: none;
  font-size: 2rem;
  font-weight: bold;
  padding: 1rem;
}

.navegacion-principal a:hover {
  background-color: var(--terciario);
  color: var(--primario);
}
